name: Build Package

on:
  workflow_dispatch:
    inputs:
      platform:
        description: "选择构建平台"
        required: true
        type: choice
        options:
          - all
          - linux
          - windows
        default: "all"
  push:
    tags:
      - 'v*'
  release:
    types: [published]

jobs:
  build_linux:
    if: github.event.inputs.platform == 'all' || github.event.inputs.platform == 'linux' || github.event_name == 'push' || github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js for build
        uses: actions/setup-node@v4
        with:
          node-version: '22.16.0'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm install
          cd client && npm install
          cd ../server && npm install
      - name: Build package
        run: npm run package:linux
        env:
          CI: true
          NODE_ENV: production
      - name: Archive build files
        run: |
          cd dist
          zip -r ../gsm3-management-panel-linux.zip package/
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: gsm3-management-panel-linux-build
          path: gsm3-management-panel-linux.zip
          retention-days: 30

  build_windows:
    if: github.event.inputs.platform == 'all' || github.event.inputs.platform == 'windows' || github.event_name == 'push' || github.event_name == 'release'
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.16.0'
          cache: 'npm'
      - name: Download Windows Node.js
        shell: pwsh
        run: |
          $nodeVersion = "22.16.0"
          $nodeUrl = "https://nodejs.org/dist/v$nodeVersion/node-v$nodeVersion-win-x64.zip"
          Write-Host "Downloading Node.js for Windows..."
          Invoke-WebRequest -Uri $nodeUrl -OutFile "node-windows.zip"
          
          # 解压到临时目录
          Write-Host "Extracting Node.js..."
          Expand-Archive -Path "node-windows.zip" -DestinationPath "temp-node" -Force
          
          # 移动到server目录
          if (Test-Path "temp-node/node-v$nodeVersion-win-x64") {
            if (Test-Path "server/node") {
              Remove-Item "server/node" -Recurse -Force
            }
            Move-Item "temp-node/node-v$nodeVersion-win-x64" "server/node"
            Remove-Item "temp-node" -Recurse -Force
          }
          
          # 验证文件结构
          if (Test-Path "server/node/node.exe") {
            Write-Host "Node.js for Windows downloaded and placed in server directory successfully"
          } else {
            Write-Error "Failed to place Node.js in server directory"
            exit 1
          }
      - name: Install dependencies
        run: |
          npm install
          cd client
          npm install
          cd ..
          cd server
          npm install
          cd ..
      - name: Build package
        run: npm run package:windows
        env:
          CI: true
          NODE_ENV: production
      - name: Archive build files
        shell: pwsh
        run: |
          cd dist
          Compress-Archive -Path "package" -DestinationPath "../gsm3-management-panel-windows.zip" -Force
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: gsm3-management-panel-windows-build
          path: gsm3-management-panel-windows.zip
          retention-days: 30

  # 创建发布版本（仅在推送标签时触发）
  create_release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [build_linux, build_windows]
    runs-on: ubuntu-latest
    steps:
      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: gsm3-management-panel-linux-build
      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: gsm3-management-panel-windows-build
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            gsm3-management-panel-linux.zip
            gsm3-management-panel-windows.zip
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
