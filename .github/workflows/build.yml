name: Build Package

on:
  workflow_dispatch:
    inputs:
      build_linux:
        description: "构建Linux版本"
        required: false
        type: boolean
        default: true
      build_windows:
        description: "构建Windows版本"
        required: false
        type: boolean
        default: true
      build_docker:
        description: "构建Docker镜像"
        required: false
        type: boolean
        default: false
  push:
    tags:
      - 'v*'
  release:
    types: [published]

jobs:
  build_linux:
    if: github.event.inputs.build_linux == 'true' || github.event_name == 'push' || github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js for build
        uses: actions/setup-node@v4
        with:
          node-version: '22.16.0'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm install
          cd client && npm install
          cd ../server && npm install
      - name: Build package
        run: npm run package:linux
        env:
          CI: true
          NODE_ENV: production
      - name: Archive build files
        run: |
          cd dist
          zip -r ../gsm3-management-panel-linux.zip package/
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: gsm3-management-panel-linux-build
          path: gsm3-management-panel-linux.zip
          retention-days: 30

  build_windows:
    if: github.event.inputs.build_windows == 'true' || github.event_name == 'push' || github.event_name == 'release'
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.16.0'
          cache: 'npm'
      - name: Install dependencies
        run: |
          npm install
          cd client
          npm install
          cd ..
          cd server
          npm install
          cd ..
      - name: Build package
        run: npm run package:windows
        env:
          CI: true
          NODE_ENV: production
      - name: Archive build files
        shell: pwsh
        run: |
          cd dist
          Compress-Archive -Path "package" -DestinationPath "../gsm3-management-panel-windows.zip" -Force
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: gsm3-management-panel-windows-build
          path: gsm3-management-panel-windows.zip
          retention-days: 30

  build_docker:
    if: github.event.inputs.build_docker == 'true' || github.event_name == 'push' || github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
      # 第一步：检出代码
      - name: 拉取仓库代码
        uses: actions/checkout@v4
        
      # 第二步：设置构建环境
      - name: 配置QEMU模拟器
        uses: docker/setup-qemu-action@v2
        
      - name: 配置Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: network=host
        
      # 第三步：登录所有镜像仓库
      - name: 登录Docker仓库
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: 登录GitHub容器仓库
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      # 第四步：构建并推送镜像（带缓存功能）
      - name: 缓存并构建推送DockerHub
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            xiaozhu674/gameservermanager:3.0.0
            ghcr.io/${{ github.repository_owner }}/gameservermanager:3.0.0
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # 创建发布版本（仅在推送标签时触发）
  create_release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: [build_linux, build_windows, build_docker]
    runs-on: ubuntu-latest
    steps:
      - name: Download Linux artifact
        uses: actions/download-artifact@v4
        with:
          name: gsm3-management-panel-linux-build
      - name: Download Windows artifact
        uses: actions/download-artifact@v4
        with:
          name: gsm3-management-panel-windows-build
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            gsm3-management-panel-linux.zip
            gsm3-management-panel-windows.zip
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
